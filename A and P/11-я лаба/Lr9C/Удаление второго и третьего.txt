int deleteTwoThree(Person* st) {
    if (!(st)) return 0; Person* temp; //если список пуст - выйти 
    while (st->prev) st = st->prev; //возвращаем указатель в начало
    if (!(st->next)) return 0; //если элемент только один - выходим
    else st = st->next; //иначе переходим на второй элемент
    if (!(st->next)) return 0;// если элементов всего два - выходим
    else st = st->next;// иначе переходим на третий 
    if (!(st->next)) temp = NULL; else //если третий последний - то запоминаем пустоту
    temp = st->next; //запоминаем указатель на четвертый элемент
    st = st->prev; //возвращаемся на второй 
    free(st->next);//удаляем третий
    st = st->prev; // возвращаемся на первый
    free(st->next);//удаляем второй 
    if(temp)  temp->prev = st; //у четвертого предыдущим ставим первый , если четвертый существует  
    st->next = temp;//У первого следующим ставим четертый 
    return 1;
}