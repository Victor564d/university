
//

#include<iostream>
#include<windows.h> // Подключаем три препроцессора . Один для ввода/вывода , второй для вычисления , третий для подключения консоли 
#include<math.h>
using namespace std;
int main()
{
	float a,b, // параметры
		x, // аргумент функции z
		xn, // начальное значение аргумента x
		xk, // конечное значение аргумента x
		dx, // шаг
		z; // значение функции z

	system("chcp 1251"); // Задаем таблицу символов для работы с консолью
	while (1) {
		cout <<  ("Введите x начальное :\n"); cin >>xn ;
		if (xn > 0) { break; }
		else cout << ("Введите  xn > 0 \n"); //проверка на правильность введенного xn, если он верен , то цикл заканчивается 
	}// выводим в консоль текстовые данные и считываем введенные значения 
	while (1) {
		cout<< ("Введите x конечное :\n"); cin >> xk;
		if (xk>xn) { break; }
		else cout << ("Введите  xk > xn \n"); //проверка на правильность введенного xk, если он верен , то цикл заканчивается 
	}// выводим в консоль текстовые данные и считываем введенные значения 
	while (1) {
		cout << ("Введите шаг :\n"); cin >> dx;
		if (dx > 0) { break; }
		else cout << ("Введите  шаг > 0 \n"); ///проверка на правильность введенного шага, если он верен , то цикл заканчивается 
	}// выводим в консоль текстовые данные и считываем введенные значения 
	 // считываем остальные переменные
	cout << ("Введите a:\n"); cin >> a;
	cout << ("Введите b:\n"); cin >> b;
	x = xn;
	cout << ("---------------------------------\n");
	cout << ("|	знач x  |    значение z |\n"); // заголовок таблицы 
	cout << ("---------------------------------\n"); 
	while (x <= xk) {
		if (x <= a) { // производим сравнение двух переменных 
			z = x - 2 * pow(cos(x), 2); // Вычисляем значение для переменной исходя из условия
		}
		else  // если не выполнилось условие то проверяем следующее условие
			if ((a < x) && (x < b)) {
				z = log(x) * sin(x);// Вычисляем значение для переменной исходя из условия
			}
			else 
			{// если не выполнилось условие то выполняем действие  
				z = 1.3 + sin(x);// Вычисляем значение для переменной исходя из условия
			}
		cout << "|	 "<<x <<	"	|   "<<z <<"	|" << endl;// Выводим полученный результат функции 
		x += dx; // изменяем x на шаг 
		}
	cout << ("---------------------------------\n"); //закрываем таблицу 
	return 0;
}


// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
