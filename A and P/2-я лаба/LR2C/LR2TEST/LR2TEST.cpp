// LR2TEST.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//
#pragma warning(disable : 4996)  //отключение ошибки о старой функции
#include<stdio.h>
#include<windows.h> // Подключаем три препроцессора . Один для ввода/вывода , второй для вычисления , третий для подключения консоли 
#include<math.h>

main()
{
	float x,  a, b; // Определяем переменные, все они с плавающей точкой 
	double z;
	SetConsoleCP(1251); // Задаем таблицу символов для консоли.
	SetConsoleOutputCP(1251);
	while (1) {
		printf("Введите x:\n"); scanf("%f", x);
		if (x > 0) { break; } else printf("Введите  x > 0 \n"); //проверка на правильность введенного x, если он верен , то цикл заканчивается 
	}// выводим в консоль текстовые данные и считываем введенные значения 
	printf("Введите a:\n"); scanf("%f", &a);
	printf("Введите b:\n"); scanf("%f", &b);
	if (x <= a){ // производим сравнение двух переменных 
		printf("\n%.2f <= %.2f\n",x,a); // выводим условие для которого будет вычислятся выражение 
		z = x - 2 * pow(cos(x),2); // Вычисляем значение для переменной исходя из условия
		} else  // если не выполнилось условие то проверяем следующее условие
		if ((a < x) && (x < b)) {
			printf("\n%.2f < %.2f < %.2f\n", a, x,b);// выводим условие для которого будет вычислятся выражение 
			z = log(x) * sin(x);// Вычисляем значение для переменной исходя из условия
		}
		else {// если не выполнилось условие то выполняем действие 
			printf("\n%.2f >= %.2f", x, b);// выводим условие для которого будет вычислятся выражение 
			z = 1.3 + sin(x);// Вычисляем значение для переменной исходя из условия
		}
	printf("\nZ = %.5f;\n",z);// Выводим полученный результат функции 
	return 0;
}


// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
