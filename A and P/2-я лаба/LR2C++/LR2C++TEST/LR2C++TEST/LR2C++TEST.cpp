// LR2C++TEST.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <math.h> // Подключаем три препроцессора . Один для ввода/вывода , второй для вычисления , третий для подключения консоли 
#include <windows.h>
using namespace std;


int main()
{
    system("chcp 1251"); // Задаем таблицу символов для работы с консолью
    float x, a, b, z ;
    z = 0;//объявляем переменные 
    while (true) // бесконечный цикл , необходимый для проверки правильности введенного X
    {
        cout << ("Введите x:\n"); cin >> x; //Вывод текста в консоль и считывание переменной
        if (x > 0) { break; } //если переменная введена правильно тогда выходим из цикла, иначе повторный ввод значения
        else { cout << ("Введите x>0 \n"); } 
    }
    cout << ("Введите a:\n"); cin >> a;//Вывод текста в консоль и считывание переменной
    cout << ("Введите b:\n"); cin >> b;//Вывод текста в консоль и считывание переменной
    cout.setf(ios::fixed, ios::floatfield);// задаем формат вывода значения с плавающей точкой 
   // if (x <= a) { //если выполнилось условие 
       // cout << x << " <= " << a << "\n" << endl; //выводим условие которое выполнилось 
        z =  (x<=a) ?  (x - 2 * pow(cos(x), 2)):z ; //вычисляем значение функции
   // }
   // else //проверяем другое условие так как первое невыполнилось 
       // if ((a < x) && (x < b)) { //если выполнилось условие
        //    cout << a <<" < "<<x << " < "<< b << "\n" <<  endl; //выводим условие которое выполнилось 
            z =  ((a < x) && (x < b))?  (log(x) * sin(x)) : z; //вычисляем значение функции
       // } // выполняем третий вариант вычислений так как два других варианта не выполнились
      //  else {
      //      cout << x <<" >= "<< b << "\n" << endl;//выводим условие которое выполнилось 
            z =  ( x>=b)?  (1.3 + sin(x) ) :  z ;//вычисляем значение функции
        //}

    cout << "Значение функции z = f(x) = " << z << endl; //выводим полученное значение функции
    return 0;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
